on: [push, pull_request]

name: tests

jobs:
  checks:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        tc: [nightly]
    steps:
    - uses: actions/checkout@v2
    - uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: ${{ matrix.tc }}
        components: rustfmt, clippy
        override: true
    - run: cargo fmt --check
    - run: cargo clippy -- -D warnings
  checks-cross-compile:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        tc: [nightly]
        cc:
        - aarch64-linux-android
        - i686-pc-windows-gnu
        - i686-unknown-freebsd
        - i686-unknown-linux-gnu
        - wasm32-wasi
        - x86_64-apple-darwin
        - x86_64-unknown-redox
    steps:
    - uses: actions/checkout@v2
    - uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: ${{ matrix.tc }}
        target: ${{ matrix.cc }}
        components: clippy
        override: true
    - run: cargo clippy --all-features --target=${{ matrix.cc }} -- -D warnings
  checks-cross-compile-ios:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest]
        tc: [nightly]
        cc: [aarch64-apple-ios]
    steps:
    - uses: actions/checkout@v2
    - uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: ${{ matrix.tc }}
        target: ${{ matrix.cc }}
        components: clippy
        override: true
    - run: cargo clippy --all-features --target=${{ matrix.cc }} -- -D warnings
  checks-cross-compile-wasm:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        tc: [nightly]
        cc: [wasm32-unknown-unknown]
    steps:
    - uses: actions/checkout@v2
    - uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: ${{ matrix.tc }}
        target: ${{ matrix.cc }}
        components: clippy
        override: true
    - run: cargo update -p bumpalo --precise 3.4.0
    - run: cargo update -p web-sys --precise 0.3.55
    - run: cargo update -p js-sys --precise 0.3.55
    - run: cargo update -p wasm-bindgen --precise 0.2.78
    - run: cargo update -p log --precise 0.4.17
    - run: cargo clippy --all-features --target=${{ matrix.cc }} -- -D warnings
    - run: cargo clippy --no-default-features --target=${{ matrix.cc }} -- -D warnings
    - run: RUSTFLAGS="--cfg target_os=\"daku\"" cargo clippy --target=${{ matrix.cc }} -- -D warnings
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        tc: [1.40.0, stable, beta, nightly]
    steps:
    - uses: actions/checkout@v2
    - uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: ${{ matrix.tc }}
        override: true
    - run: cargo test --all --all-features
  test-macos:
    runs-on: macos-latest
    strategy:
      matrix:
        tc: [stable, beta, nightly]
    steps:
    - uses: actions/checkout@v2
    - uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: ${{ matrix.tc }}
        override: true
    - run: cargo test --all --all-features --target=x86_64-apple-darwin
  cross-compile:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        tc: [1.40.0, stable, beta, nightly]
        cc:
        - aarch64-linux-android
        - i686-pc-windows-gnu
        - i686-unknown-freebsd
        - i686-unknown-linux-gnu
        - wasm32-wasi
        - x86_64-apple-darwin
        - x86_64-unknown-redox
    steps:
    - uses: actions/checkout@v2
    - uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: ${{ matrix.tc }}
        target: ${{ matrix.cc }}
        override: true
    - run: cargo build --all-features --target=${{ matrix.cc }}
  cross-compile-ios:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest]
        tc: [1.40.0, stable, beta, nightly]
        cc: [aarch64-apple-ios]
    steps:
    - uses: actions/checkout@v2
    - uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: ${{ matrix.tc }}
        target: ${{ matrix.cc }}
        override: true
    - run: cargo build --all-features --target=${{ matrix.cc }}
  cross-compile-m1:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest]
        tc: [stable, beta, nightly]
        cc: [aarch64-apple-darwin]
    steps:
    - uses: actions/checkout@v2
    - uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: ${{ matrix.tc }}
        target: ${{ matrix.cc }}
        override: true
    - run: cargo build --all-features --target=${{ matrix.cc }}
  cross-compile-wasm:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        tc: [1.40.0, stable, beta, nightly]
        cc: [wasm32-unknown-unknown]
    steps:
    - uses: actions/checkout@v2
    - uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: ${{ matrix.tc }}
        target: ${{ matrix.cc }}
        override: true
    - run: cargo update -p bumpalo --precise 3.4.0
    - run: cargo update -p web-sys --precise 0.3.55
    - run: cargo update -p js-sys --precise 0.3.55
    - run: cargo update -p wasm-bindgen --precise 0.2.78
    - run: cargo update -p log --precise 0.4.17
    - run: cargo build --all-features --target=${{ matrix.cc }}
    - run: cargo build --no-default-features --target=${{ matrix.cc }}
    - run: RUSTFLAGS="--cfg target_os=\"daku\"" cargo build --target=${{ matrix.cc }}
